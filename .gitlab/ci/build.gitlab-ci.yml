cache:
  key: gradle-cache
  paths:
    - .gradle/
    - build/

spotless-formatting-check:
  image: gradle:8.12.1-jdk23
  stage: prerequisites
  script:
    - ./gradlew --no-daemon spotlessCheck
  interruptible: true

unit-test:
  image: gradle:8.12.1-jdk23
  stage: prerequisites
  script:
    - ./gradlew --no-daemon test
  interruptible: true

compile-and-build-jar:
  image: gradle:8.12.1-jdk23
  stage: build
  script:
    - ./gradlew --no-daemon clean build -x spotlessCheck test
  interruptible: true

docker-image-build:
  stage: dockerize
  image: quay.io/buildah/stable
  variables:
    STORAGE_DRIVER: vfs
    BUILDAH_FORMAT: docker
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | buildah login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - buildah build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - buildah push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  interruptible: true

argocd-deployment:
  stage: deploy
  interruptible: false
  image:
    name: alpine/helm
    entrypoint: [ "" ]
  variables:
    NAMESPACE: spring-projects
    ARGOCD_DEPLOY_SUB_PATH: argocd-gitops/zeus-k8s/spring-projects/kafka-data-processor
    ARGOCD_REPOSITORY: argocd-gitops
  before_script:
    - git clone --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.notyouraverage.dev/marketing-plg/helm-charts.git
    - git clone --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.notyouraverage.dev/a.anand.91119/${ARGOCD_REPOSITORY}.git
  script:
    - |
      if [ -f "./deployment/values.yaml" ]; then
        VALUES_FILE="./deployment/values.yaml"
      else
        VALUES_FILE="helm-charts/spring-boot-app/values.yaml"
      fi
    - helm template release helm-charts/spring-boot-app --values $VALUES_FILE  --namespace ${NAMESPACE} --set image.repository=${CI_REGISTRY_IMAGE} --set image.tag=${CI_COMMIT_SHORT_SHA} --output-dir ./
    - rm -rf ${ARGOCD_DEPLOY_SUB_PATH}/*
    - mv ./spring-boot-app/templates/* ${ARGOCD_DEPLOY_SUB_PATH}/
    - cd ${ARGOCD_REPOSITORY}
    - git config --global user.email "a.anand.91119@notyouraverage.dev"
    - git config --global user.name "CI/CD Bot"
    - git add .
    - git commit -m "Update ${CI_PROJECT_NAME} commit ${CI_COMMIT_SHORT_SHA}"
    - git remote set-url origin https://gitlab-ci-token:${REPO_WRITE_TOKEN}@gitlab.notyouraverage.dev/a.anand.91119/${ARGOCD_REPOSITORY}.git
    - git push origin main
